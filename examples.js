// --- –ò–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ---
let gameState = {
    hour: 8,       // —Å—Ç–∞—Ä—Ç ‚Äî 08:00 —É—Ç—Ä–∞
    minute: 0,
    health: 100
  };

let is_def = 1;
let neighbors_knock = 0;
let window_knock = 0;
  
  // --- –°—Ü–µ–Ω—ã ---
  const scenes = {
    start: {
      background: "images/forest.png",
      sound: "sounds/sound.mp3",
      text: "–¢—ã –æ—á–Ω—É–ª—Å—è –≤ –ª–µ—Å—É. –ö–∞–∂–µ—Ç—Å—è, –≤–ø–µ—Ä–µ–¥–∏ —Ç—Ä–æ–ø–∏–Ω–∫–∞. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
      onEnter: () => setTimeVisual(),
      choices: [
        { text: "–ü–æ–π—Ç–∏ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ", next: "path" },
        { text: "–û—Å—Ç–∞—Ç—å—Å—è –∏ –æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è", next: "look" }
      ]
    },
    path: {
      background: "images/road.png",
      sound: "sounds/sound.mp3",
      text: "–¢—ã –≤—ã—à–µ–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –¥–æ—Ä–æ–≥—É. –í–¥–∞–ª–∏ –≤–∏–¥–Ω–µ–µ—Ç—Å—è –¥–µ—Ä–µ–≤–Ω—è.",
      onEnter: () => addMinutes(30),
      choices: [
        { text: "–ò–¥—Ç–∏ –≤ –¥–µ—Ä–µ–≤–Ω—é", next: "village" },
        { text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–µ—Å", next: "start" }
      ]
    },
    look: {
      background: "images/camp.png",
      sound: "sounds/sound.mp3",
      text: "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å —Ä—é–∫–∑–∞–∫ —Å –µ–¥–æ–π. +10 –∫ –∑–¥–æ—Ä–æ–≤—å—é.",
      onEnter: () => changeHealth(10),
      choices: [
        { text: "–ü–æ–π—Ç–∏ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ", next: "path" }
      ]
    },
    village: {
      background: "images/village.png",
      sound: "sounds/sound.mp3",
      text: "–¢—ã –≤–æ—à—ë–ª –≤ –¥–µ—Ä–µ–≤–Ω—é. –¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞—Ä–æ—Å—Ç–∞.",
      choices: [
        { text: "–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ —Å—Ç–∞—Ä–æ—Å—Ç–æ–π", next: "end" }
      ]
    },
    end: {
      background: "images/sunset.png",
      text: "–°—Ç–∞—Ä–æ—Å—Ç–∞ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ —Å–ª—É—á–∏–≤—à–∏—Ö—Å—è –≤ –¥–µ—Ä–µ–≤–Ω–µ –∞–Ω–æ–º–∞–ª–∏—è—Ö, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–π—Ç–∏ –≤ –¥–æ–º.",
      onEnter: () => addMinutes(120),
      choices: [
        { text: "–û—Ç–∫–∞–∑–∞—Ç—å—Å—è. –£–π—Ç–∏ –∏–∑ –¥–µ—Ä–µ–≤–Ω–∏", next: "start" },
        { text: "–ü—Ä–æ–π—Ç–∏ –≤ –¥–æ–º", next: "home" }
      ]
    },
    home: {
      background: "images/home.png",
      text: "–í—ã –≤–æ—à–ª–∏ –≤ –¥–æ–º. –ö –≤–∞–º —Å–ø–∏–Ω–æ–π —Å—Ç–æ–∏—Ç –ø–æ–∂–∏–ª–æ–π –º—É–∂—á–∏–Ω–∞ –∏ —Ç—è–∂–µ–ª–æ –¥—ã—à–∏—Ç. –°–ª–µ–≤–∞ –ø—Ä–∏–æ—Ç–∫—Ä—ã—Ç–∞ –¥–≤–µ—Ä—å –≤ –∫–æ–º–Ω–∞—Ç—É.",
      choices: [
        { text: "–°–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ —É –º—É–∂—á–∏–Ω—ã", next: "fatal" },
        { text: "–ü—Ä–æ–π—Ç–∏ –≤ —Ç—ë–º–Ω—É—é –∫–æ–º–Ω–∞—Ç—É", next: "room" }
      ]
    },
    fatal: {
      background: "images/fatal.png",
      text: "–í—ã –ø–æ—Ç—Ä–µ–≤–æ–∂–∏–ª–∏ –ø–µ—Ä–µ–∫–æ–∂–Ω–∏–∫–∞, –≤–∞—à–∏ —á–∞—Å—ã —Å–æ—á—Ç–µ–Ω—ã, –≥—Ä–∏–±–æ–∫ –≤—Å–µ–ª—è–µ—Ç—Å—è –≤ –≤–∞—à–µ —Ç–µ–ª–æ.",
      choices: [
        { text: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", next: "start" }
      ]
    },
    fatal_2: {
      background: "images/fatal_2.png",
      text: "–ï–¥–∞ –±—ã–ª–∞ –∑–∞—Ä–∞–∂–µ–Ω–∞, –≤–∞—à–∏ —á–∞—Å—ã —Å–æ—á—Ç–µ–Ω—ã, –≥—Ä–∏–±–æ–∫ –≤—Å–µ–ª—è–µ—Ç—Å—è –≤ –≤–∞—à–µ —Ç–µ–ª–æ.",
      choices: [
        { text: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", next: "start" }
      ]
    },
    happy_end: {
      background: "images/happy_end.png",
      text: "–ü–æ–∫–∞ —á—Ç–æ –≤–∞–º —É–¥–∞–ª–æ—Å—å –∏–∑–±–µ–∂–∞—Ç—å –∑–∞—Ä–∞–∂–µ–Ω–∏—è. –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ª–µ–¥—É–µ—Ç...",
      choices: [
        { text: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", next: "start" }
      ]
    },
    room: {
      background: "images/room.png",
      text: "–í—ã –≥–æ–ª–æ–¥–Ω—ã. –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∞—Ç —Ñ—Ä—É–∫—Ç—ã, –ø–∞—Ö–Ω—É—Ç –≥—Ä–∏–±–∞–º–∏. –í–∞–º –Ω—É–∂–Ω–æ —É—Ç–æ–ª–∏—Ç—å –≥–æ–ª–æ–¥.",
      choices: [
        { 
          text: "–°—ä–µ—Å—Ç—å —Ñ—Ä—É–∫—Ç—ã", 
          next: () => (Math.random() < 0.6 ? "fatal_2" : "happy_end") // üé≤ 60% —à–∞–Ω—Å –∑–∞—Ä–∞–∂–µ–Ω–∏—è
        },
        { text: "–°–ª–∏–∑–∞—Ç—å —Å–º–æ–ª—É —Å–æ —Å—Ç–µ–Ω—ã", next: "happy_end" }
      ]
    }
  };
  
  // --- –í—Ä–µ–º—è ---
  function addMinutes(mins) {
    gameState.minute += mins;
    while (gameState.minute >= 60) {
      gameState.minute -= 60;
      gameState.hour++;
    }
    if (gameState.hour >= 24) gameState.hour -= 24;
    updateClock();
    setTimeVisual();
  }
  
  function startClock() {
    setInterval(() => {
      addMinutes(1); // 1 —Å–µ–∫ = 1 –º–∏–Ω—É—Ç–∞
    }, 1000);
  }
  
  function updateClock() {
    const h = String(gameState.hour).padStart(2, "0");
    const m = String(gameState.minute).padStart(2, "0");
    document.getElementById("time").textContent = `${h}:${m}`;
  }
  
  // --- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ ---
  function setTimeVisual() {
    const bg = document.getElementById("background");
    const h = gameState.hour;
    if (h >= 6 && h < 12) bg.className = "morning";
    else if (h >= 12 && h < 18) bg.className = "day";
    else if (h >= 18 && h < 21) bg.className = "evening";
    else bg.className = "night";
  }
  
  // --- –ó–¥–æ—Ä–æ–≤—å–µ ---
  function changeHealth(amount) {
    gameState.health = Math.min(100, Math.max(0, gameState.health + amount));
    document.getElementById("health").textContent = gameState.health;
    if (gameState.health <= 0) loadScene("fatal");
  }
  
  // --- –≠—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∞—é—â–µ–≥–æ—Å—è —Ç–µ–∫—Å—Ç–∞ ---
  function typeText(element, text, speed = 25) {
    element.textContent = "";
    let i = 0;
    const timer = setInterval(() => {
      element.textContent += text[i];
      i++;
      if (i >= text.length) clearInterval(timer);
    }, speed);
  }
  
  // --- –≠—Ñ—Ñ–µ–∫—Ç —Ñ–æ–Ω–∞ ---
  document.addEventListener('mousemove', e => {
    const bg = document.getElementById('background');
    const moveX = (e.clientX / window.innerWidth - 0.5) * 10;
    const moveY = (e.clientY / window.innerHeight - 0.5) * 10;
    bg.style.transform = `translate(${moveX}px, ${moveY}px) scale(1.05)`;
  });
  
  // --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ü–µ–Ω ---
  let currentScene = null;
  
  function loadScene(name) {
    const scene = scenes[name] || scenes[name()] || null;
    if (!scene) return;
  
    const game = document.getElementById("game");
    const storyEl = document.getElementById("story");
  
    game.classList.remove("fade-in");
    game.classList.add("fade-out");
  
    setTimeout(() => {
      currentScene = scene;
      document.getElementById("background").style.backgroundImage = `url(${scene.background})`;
  
      const audio = document.getElementById("bgm");
      if (scene.sound) {
        audio.src = scene.sound;
        audio.play().catch(() => {});
      }
  
      if (scene.onEnter) scene.onEnter();
  
      typeText(storyEl, scene.text);
  
      const choicesDiv = document.getElementById("choices");
      choicesDiv.innerHTML = "";
      scene.choices.forEach(choice => {
        const btn = document.createElement("div");
        btn.className = "choice";
        btn.textContent = choice.text;
        btn.onclick = () => {
          playClickSound();
          loadScene(typeof choice.next === "function" ? choice.next() : choice.next);
        };
        choicesDiv.appendChild(btn);
      });
  
      game.classList.remove("fade-out");
      game.classList.add("fade-in");
  
    }, 700);
  }
  
  // --- –ó–≤—É–∫ –∫–ª–∏–∫–∞ ---
  function playClickSound() {
    const click = new Audio("sounds/click.mp3");
    click.volume = 0.3;
    click.play().catch(() => {});
  }
  
  // --- –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã ---
  window.onload = () => {
    document.getElementById("health").textContent = gameState.health;
    updateClock();
    startClock();
    loadScene("start");
  };

  ###################

  // –ò–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
let currentScene = null;
let health = 100;
let food = 50;
let time = { hours: 8, minutes: 0 }; // –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã ‚Äî 08:00 —É—Ç—Ä–∞

// ----------------------------
// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// ----------------------------
function changeHealth(amount) {
  health = Math.min(100, Math.max(0, health + amount));
  document.getElementById("health").textContent = health;
}

function changeFood(amount) {
  food = Math.min(100, Math.max(0, food + amount));
  document.getElementById("food").textContent = food;
}

function formatTime() {
  return `${String(time.hours).padStart(2, "0")}:${String(time.minutes).padStart(2, "0")}`;
}

function addMinutes(mins) {
  time.minutes += mins;
  while (time.minutes >= 60) {
    time.minutes -= 60;
    time.hours = (time.hours + 1) % 24;
  }
  document.getElementById("time").textContent = formatTime();
}

// ----------------------------
// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ü–µ–Ω—ã
// ----------------------------
function loadScene(name) {
  const scene = scenes[name];
  if (!scene) return;

  currentScene = scene;
  document.getElementById("background").style.backgroundImage = `url(${scene.background})`;
  document.getElementById("story").textContent = scene.text;

  // –∑–≤—É–∫
  const audio = document.getElementById("bgm");
  if (scene.sound) {
    audio.src = scene.sound;
    audio.play().catch(() => {});
  }

  // –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –≤—Ö–æ–¥–µ
  if (scene.onEnter) scene.onEnter();

  // –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const choicesDiv = document.getElementById("choices");
  choicesDiv.innerHTML = "";
  scene.choices.forEach(choice => {
    const btn = document.createElement("div");
    btn.className = "choice";
    btn.textContent = choice.text;
    btn.onclick = () => loadScene(choice.next);
    choicesDiv.appendChild(btn);
  });
}

// ----------------------------
// –ú–µ—Ö–∞–Ω–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–æ–±—ã—Ç–∏–π
// ----------------------------
setInterval(() => {
  addMinutes(1); // –∫–∞–∂–¥–∞—è —Å–µ–∫—É–Ω–¥–∞ = 1 –º–∏–Ω—É—Ç–∞

  // –ù–µ–º–Ω–æ–≥–æ —É–±—ã–≤–∞–µ—Ç —Å—ã—Ç–æ—Å—Ç—å —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
  if (Math.random() < 0.1) changeFood(-1);

  // –°–º–µ—Ä—Ç—å –æ—Ç –≥–æ–ª–æ–¥–∞
  if (food <= 0) {
    loadScene("fatal_hunger");
    return;
  }

  // –ü—Ä–∏–º–µ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è: –Ω–æ—á—å—é –≤ –ª–µ—Å—É –Ω–∞–ø–∞–¥–∞–µ—Ç –∑–≤–µ—Ä—å
  if (currentScene?.id === "start" && time.hours >= 22 && Math.random() < 0.05) {
    loadScene("wolf_attack");
  }

}, 1000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

// ----------------------------
// –ü—Ä–∏–º–µ—Ä –Ω–∞–±–æ—Ä–∞ —Å—Ü–µ–Ω
// ----------------------------
const scenes = {
  start: {
    id: "start",
    background: "images/forest.png",
    sound: "sounds/sound.mp3",
    text: "–¢—ã –æ—á–Ω—É–ª—Å—è –≤ –ª–µ—Å—É. –°–æ–ª–Ω—Ü–µ —Å–∞–¥–∏—Ç—Å—è, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ.",
    choices: [
      { text: "–ü–æ–π—Ç–∏ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ", next: "path" },
      { text: "–†–∞–∑–≤–µ—Å—Ç–∏ –∫–æ—Å—Ç—ë—Ä", next: "camp" }
    ]
  },

  camp: {
    background: "images/camp.png",
    text: "–¢—ã —Ä–∞–∑–≤—ë–ª –∫–æ—Å—Ç—ë—Ä. –°–æ–≥—Ä–µ–ª—Å—è –∏ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–¥–æ—Ö–Ω—É–ª.",
    onEnter: () => {
      changeHealth(+5);
      changeFood(-5);
    },
    choices: [
      { text: "–ü–æ–π—Ç–∏ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ", next: "path" },
      { text: "–û—Å—Ç–∞—Ç—å—Å—è —É –∫–æ—Å—Ç—Ä–∞", next: "camp_sleep" }
    ]
  },

  camp_sleep: {
    background: "images/night.png",
    text: "–¢—ã –∑–∞–¥—Ä–µ–º–∞–ª —É –∫–æ—Å—Ç—Ä–∞...",
    onEnter: () => {
      addMinutes(60);
      if (Math.random() < 0.3) {
        loadScene("wolf_attack");
      } else {
        changeHealth(+10);
      }
    },
    choices: [
      { text: "–ü—Ä–æ—Å–Ω—É—Ç—å—Å—è", next: "start" }
    ]
  },

  path: {
    id: "path",
    background: "images/road.png",
    text: "–¢—ã –≤—ã—à–µ–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –¥–æ—Ä–æ–≥—É. –°–æ–ª–Ω—Ü–µ —É–∂–µ –∫–ª–æ–Ω–∏—Ç—Å—è –∫ –∑–∞–∫–∞—Ç—É.",
    onEnter: () => addMinutes(15),
    choices: [
      { text: "–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ", next: "village" },
      { text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–µ—Å", next: "start" }
    ]
  },

  village: {
    background: "images/village.png",
    text: "–¢—ã –ø—Ä–∏—à—ë–ª –≤ –¥–µ—Ä–µ–≤–Ω—é. –ù–∞ –ø–ª–æ—â–∞–¥–∏ –∫—Ç–æ-—Ç–æ –ø–æ—ë—Ç.",
    onEnter: () => changeFood(+10),
    choices: [
      { text: "–ó–∞–π—Ç–∏ –≤ —Ç–∞–≤–µ—Ä–Ω—É", next: "happy_end" }
    ]
  },

  wolf_attack: {
    background: "images/wolf.png",
    text: "–ù–∞ —Ç–µ–±—è –Ω–∞–ø–∞–ª –≤–æ–ª–∫! –¢—ã –ø–æ–ª—É—á–∏–ª —Ä–∞–Ω–µ–Ω–∏—è.",
    onEnter: () => changeHealth(-40),
    choices: [
      { text: "–ë–µ–∂–∞—Ç—å!", next: "path" }
    ]
  },

  fatal_hunger: {
    background: "images/fatal.png",
    text: "–¢—ã —É–º–µ—Ä –æ—Ç –≥–æ–ª–æ–¥–∞. –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.",
    choices: [
      { text: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", next: "start" }
    ]
  },

  happy_end: {
    background: "images/happy_end.png",
    text: "–¢—ã –≤—ã–∂–∏–ª –∏ –Ω–∞—à—ë–ª –ø—Ä–∏—é—Ç –≤ –¥–µ—Ä–µ–≤–Ω–µ. –ü–æ–∫–∞ —á—Ç–æ –≤—Å—ë —Ö–æ—Ä–æ—à–æ...",
    choices: [
      { text: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", next: "start" }
    ]
  }
};

// ----------------------------
// –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã
// ----------------------------
window.onload = () => {
  document.getElementById("time").textContent = formatTime();
  document.getElementById("health").textContent = health;
  document.getElementById("food").textContent = food;
  loadScene("start");
};


################

const scenes = {
    start: {
      id: "start",
      background: "images/forest.png",
      sound: "sounds/sound.mp3",
      text: "–¢—ã –æ—á–Ω—É–ª—Å—è –≤ –ª–µ—Å—É. –°–æ–ª–Ω—Ü–µ —Å–∞–¥–∏—Ç—Å—è, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ.",
      choices: [
        { text: "–ü–æ–π—Ç–∏ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ", next: "path" },
        { text: "–†–∞–∑–≤–µ—Å—Ç–∏ –∫–æ—Å—Ç—ë—Ä", next: "camp" }
      ],
      // –ß–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç –Ω–∞ —Ç–µ–±—è –Ω–∞–ø–∞–¥—ë—Ç –≤–æ–ª–∫, –µ—Å–ª–∏ –Ω–µ —É—à—ë–ª
      delayedEvents: [
        { after: 10, action: () => loadScene("wolf_attack") }
      ]
    },
  
    camp: {
      id: "camp",
      background: "images/camp.png",
      text: "–¢—ã —Ä–∞–∑–≤—ë–ª –∫–æ—Å—Ç—ë—Ä. –°–æ–≥—Ä–µ–ª—Å—è –∏ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–¥–æ—Ö–Ω—É–ª.",
      onEnter: () => {
        changeHealth(+5);
        changeFood(-5);
      },
      choices: [
        { text: "–ü–æ–π—Ç–∏ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ", next: "path" },
        { text: "–û—Å—Ç–∞—Ç—å—Å—è —É –∫–æ—Å—Ç—Ä–∞", next: "camp_sleep" }
      ],
      // –ß–µ—Ä–µ–∑ 20 –º–∏–Ω—É—Ç –∫–æ—Å—Ç—ë—Ä –ø–æ—Ç—É—Ö–Ω–µ—Ç, –∏ –±—É–¥–µ—Ç —à–∞–Ω—Å –Ω–∞–ø–∞–¥–µ–Ω–∏—è
      delayedEvents: [
        {
          after: 20,
          action: () => {
            if (Math.random() < 0.3) loadScene("wolf_attack");
            else document.getElementById("story").textContent += "\n–ö–æ—Å—Ç—ë—Ä –ø–æ—á—Ç–∏ –ø–æ–≥–∞—Å...";
          }
        }
      ]
    },
  
    wolf_attack: {
      background: "images/wolf.png",
      text: "–ù–∞ —Ç–µ–±—è –Ω–∞–ø–∞–ª –≤–æ–ª–∫! –¢—ã –ø–æ–ª—É—á–∏–ª —Ä–∞–Ω–µ–Ω–∏—è.",
      onEnter: () => changeHealth(-40),
      choices: [{ text: "–ë–µ–∂–∞—Ç—å!", next: "path" }]
    },
  
    path: {
      id: "path",
      background: "images/road.png",
      text: "–¢—ã –≤—ã—à–µ–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –¥–æ—Ä–æ–≥—É. –°–æ–ª–Ω—Ü–µ –∫–ª–æ–Ω–∏—Ç—Å—è –∫ –∑–∞–∫–∞—Ç—É.",
      onEnter: () => addMinutes(15),
      choices: [
        { text: "–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ", next: "village" },
        { text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–µ—Å", next: "start" }
      ]
    },
  
    fatal_hunger: {
      background: "images/fatal.png",
      text: "–¢—ã —É–º–µ—Ä –æ—Ç –≥–æ–ª–æ–¥–∞.",
      choices: [{ text: "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", next: "start" }]
    }
  };
####
  
  { after: 15, action: () => { if (Math.random() < 0.2) loadScene("rain"); } }

#####

